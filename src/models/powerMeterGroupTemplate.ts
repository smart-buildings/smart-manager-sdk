/**
 * Smart Manager APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, Schema, string } from '../schema';
import {
  DeviceCategoryEnum,
  deviceCategoryEnumSchema,
} from './deviceCategoryEnum';
import {
  PeripheralClassesEnum,
  peripheralClassesEnumSchema,
} from './peripheralClassesEnum';
import {
  PowerMeterTemplate,
  powerMeterTemplateSchema,
} from './powerMeterTemplate';

/**
 * A physical power-meter board has 3 channels (i.e can meter 3 different things).
 * We treat each channel as an independent peripheral even though all 3 of them
 * are part of the same physical power-meter.
 */
export interface PowerMeterGroupTemplate {
  /** Unique (within template) device identifier */
  id: string;
  /** Human-friendly label for the device */
  label: string;
  /** Refers to the class within the code that represents a device */
  className: PeripheralClassesEnum;
  /**
   * We categorise devices mainly to automate commissioning of "wired"
   * and "multisenseNetwork"s (e.g. create those peripherals
   * without engineers having to manually link them on the native app)
   */
  deviceCategory: DeviceCategoryEnum;
  channels: PowerMeterTemplate[];
}

export const powerMeterGroupTemplateSchema: Schema<PowerMeterGroupTemplate> = object(
  {
    id: ['id', string()],
    label: ['label', string()],
    className: ['className', peripheralClassesEnumSchema],
    deviceCategory: ['deviceCategory', deviceCategoryEnumSchema],
    channels: ['channels', array(lazy(() => powerMeterTemplateSchema))],
  }
);
