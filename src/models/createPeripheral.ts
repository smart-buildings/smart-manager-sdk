/**
 * Smart Manager APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  nullable,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import {
  PeripheralClassesEnum,
  peripheralClassesEnumSchema,
} from './peripheralClassesEnum';

export interface CreatePeripheral {
  label: string;
  /** Refers to the class within the code that represents a device */
  className: PeripheralClassesEnum;
  /** The id of the end device e.g. aabbccdd as an enocean id for an enocean switch or 123 as a multisense network id for a smart power meter */
  hardwareId: string;
  /**
   * The id of the gateway used to communicate with this device
   * e.g. 543 a multisense network address for the multisense with an enocean addon
   */
  gatewayId: string | null;
  /** The gateway used to communicate with this device. Uses gatewayId. e.g. multisense */
  commDevice: string;
  /** Whether the contact pair on a wired device is closed when it, or the device operating it, is in a deenergised state */
  normallyClosed: boolean | null;
  /** A reference to an identifier in the template */
  templateId: string;
  /** List of add-on module/boards on this peripheral */
  modules: unknown[] | null;
  addToCurrentTemplate?: boolean;
}

export const createPeripheralSchema: Schema<CreatePeripheral> = object({
  label: ['label', string()],
  className: ['className', peripheralClassesEnumSchema],
  hardwareId: ['hardwareId', string()],
  gatewayId: ['gatewayId', nullable(string())],
  commDevice: ['commDevice', string()],
  normallyClosed: ['normallyClosed', nullable(boolean())],
  templateId: ['templateId', string()],
  modules: ['modules', nullable(array(unknown()))],
  addToCurrentTemplate: ['addToCurrentTemplate', optional(boolean())],
});
