/**
 * Smart Manager APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  lazy,
  nullable,
  number,
  object,
  optional,
  Schema,
} from '../schema';
import { IotIColour, iotIColourSchema } from './iotIColour';

/** From T, pick a set of properties whose keys are in the union K */
export interface PickIotIHighlightCommandExcludeKeyofiotIHighlightCommandIdOrTypeOrHighlightType {
  /** Set to true to turn the LED off */
  off?: boolean | null;
  /**
   * Turn on LED light to this colour (RGB format). Ignored if device does not
   * support multi-coloured LEDs, in which case it will just turn the LED on.
   * If device does not support all colours in the RGB range, it will round
   * up/down RGB values. (e.g. rgb(117, 0, 230) --> rgb(0, 0, 255))
   */
  colour?: IotIColour | null;
  /** Turn LED on for `duration` in seconds, after which LED light is turned off. */
  duration?: number | null;
}

export const pickIotIHighlightCommandExcludeKeyofiotIHighlightCommandIdOrTypeOrHighlightTypeSchema: Schema<PickIotIHighlightCommandExcludeKeyofiotIHighlightCommandIdOrTypeOrHighlightType> = object(
  {
    off: ['off', optional(nullable(boolean()))],
    colour: ['colour', optional(nullable(lazy(() => iotIColourSchema)))],
    duration: ['duration', optional(nullable(number()))],
  }
);
